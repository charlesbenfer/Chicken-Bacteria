library(readxl)
Copy_of_salmchickenMerged_updated2 <- read_excel("C:/Users/charl/Downloads/Copy of salmchickenMerged_updated2.xlsx",
col_names = FALSE)
View(Copy_of_salmchickenMerged_updated2)
rm(Copy_of_salmchickenMerged_updated2)
Chick_Sal <- read.csv("C:/Users/charl/Downloads/Chick_Sal.csv")
View(Chick_Sal)
Chick_Sal <- Chick_Sal[,-(3:12)]
Chick_Sal <- Chick_Sal[,-c(8,9,11:13,15,16,19:23,25:28)]
Chick_Sal <- Chick_Sal[,-c(32:50)]
Chick_Sal <- Chick_Sal[,-c(32:50)]
Chick_Sal <- Chick_Sal[,-c(32:40)]
Chick_Sal[,51]
Chick_Sal <- Chick_Sal[,-c(51:67)]
Chick_Sal <- Chick_Sal[,-c(55:57)]
Chick_Sal <- Chick_Sal[,-c(57,58)]
Chick_Sal <- Chick_Sal[,-c(156,158)]
Chick_Sal <- Chick_Sal[,-156]
Chick_Sal <- Chick_Sal[,-306]
Chick_Sal <- Chick_Sal[,-(315:340)]
Chick_Sal <- Chick_Sal[,-(445:450)]
Chick_Sal <- Chick_Sal[,-(445:450)]
Chick_Sal <- Chick_Sal[,-(445:450)]
write.csv(Chick_Sal, file = "Chick_Sal")
write.csv(Chick_Sal, file = "Chick_Sal.csv")
View(Chick_Sal)
attach(Chick_Sal)
plot(MIC_AMC)
hist(MIC_AMC)
Chick_Sal_Factors <- Chick_Sal
Chick_Sal_Factors[,13:31] <- as.factor(Chick_Sal_Factors[,13:31])
Chick_Sal_Factors[,13:31] <- Chick_Sal_Factors[,as.factor(13:31)]
Chick_Sal_Factors
View(Chick_Sal_Factors)
rm(Chick_Sal_Factors)
hist(as.factor(MIC_AMC))
hist(as.factor(MIC_AZM))
hist(MIC_AZM)
Chick_Sal[,13] <- as.factor(Chick_Sal[,13])
hist(MIC_AMC)
plot(MIC_AMC)
barplot(MIC_AMC)
typeof(Chick_Sal[,1:10])
typeof(Chick_Sal[,1])
typeof(Chick_Sal[,4])
typeof(Chick_Sal[,5])
which(typeof(Chick_Sal)=='integer')
which(typeof(Chick_Sal)==integer)
which(typeof(Chick_Sal)=='character')
which(typeof(Chick_Sal[1:50]) == 'character')
plot(Mortality_percent_barn ~ MIC_AMC)
detach((Chick_Sal))
detach(Chick_Sal)
library(randomForest)
install.packages("randomForest")
library(randomForest)
set.seed(500)
set.seed(500)
ind <- sample(2,nrow(Chick_Sal), replace = TRUE, prob = c(.7,.3))
train <- data[ind==1,]
set.seed(500)
ind <- sample(2,nrow(Chick_Sal), replace = TRUE, prob = c(.7,.3))
train <- Chick_Sal[ind==1,]
test<- Chick_Sal[ind==2,]
forest <- randomForest(MIC_AMC ~. data = train, proximity = TRUE)
forest <- randomForest(MIC_AMC ~., data = train, proximity = TRUE)
nas <- which(is.na(Chick_Sal))
forest <- randomForest(MIC_AMC ~., data = na.omit(train), proximity = TRUE)
print(forest)
forest <- randomForest(as.factor(MIC_STR~., data = na.omit(train), proximity = TRUE)
)
forest <- randomForest(as.factor(MIC_STR)~., data = na.omit(train), proximity = TRUE)
?randomForest
na.omit(train)
no_na <- na.omit(train)
View(train)
View(train)
View(Chick_Sal)
Chick_Sal <- Chick_Sal[,-c(14, 17, 20, 25, 33, 36, 39, 44)]
library(randomForest)
set.seed(500)
ind <- sample(2,nrow(Chick_Sal), replace = TRUE, prob = c(.7,.3))
train <- Chick_Sal[ind==1,]
test<- Chick_Sal[ind==2,]
forest <- randomForest(MIC_AMC~., data = train, proximity = TRUE)
forest <- randomForest(as.factor(MIC_TET)~., data = train, proximity = TRUE)
is.na(Chick_Sal$MIC_TET)
any(is.na(Chick_Sal$MIC_TET))
forest <- randomForest(as.factor(MIC_TET)~., data = train, proximity = TRUE)
as.factor(MIC_TET)
as.factor(train$MIC_TET)
forest <- randomForest(as.factor(train$MIC_TET)~train[,1:12], proximity = TRUE)
forest <- randomForest(as.factor(train$MIC_TET)~FINAL_ID_SEROTYPE,data = train proximity = TRUE)
forest <- randomForest(as.factor(MIC_TET)~FINAL_ID_SEROTYPE,data = train, proximity = TRUE)
print(forest)
?as.formulas
which(is.na(Chick_Sal$TEMPERATUREARRIVAL_1))
Chick_Sal$TEMPERATUREARRIVAL_1 <- as.numeric(Chick_Sal$TEMPERATUREARRIVAL_1)
Chick_Sal_Clean <- Chick_Sal
Chick_Sal_Clean <- Chick_Sal_Clean(-which(is.na(Chick_Sal_Clean$TEMPERATUREARRIVAL_1)))
Chick_Sal_Clean <- Chick_Sal_Clean[-which(is.na(Chick_Sal_Clean$TEMPERATUREARRIVAL_1)),]
View(Chick_Sal_Clean)
any(is.na(Chick_Sal_Clean$TEMPERATUREARRIVAL_1))
vars_to_clean <- rep(NA, 749)
for(i in 1:749){
vars_to_clean[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars <- rep(NA, 749)
for(i in 1:749){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars_to_clean <- which(vars == TRUE)
any(is.na(Chick_Sal_Clean$QTR))
which(is.na(Chick_Sal_Clean))
which(is.na(Chick_Sal_Clean$QTR))
Chick_Sal_Clean[,1] <- as.factor(Chick_Sal_Clean)
Chick_Sal_Clean[,1] <- as.factor(Chick_Sal_Clean[,1])
Chick_Sal_Clean[,2] <- as.factor(Chick_Sal_Clean[,2])
Chick_Sal_Clean[,3] <- as.factor(Chick_Sal_Clean[,3])
levels(Chick_Sal_Clean$PROVINCE_1)
for(i in 1:nrow(Chick_Sal_Clean)){
if(Chick_Sal_Clean[i,3] == 'ALBERTA'){Chick_Sal_Clean[i,3] <- 'Alberta'}
if(Chick_Sal_Clean[i,3] == 'BRITISH COLUMBIA'){Chick_Sal_Clean[i,3] <- 'British Columbia'}
if(Chick_Sal_Clean[i,3] == 'ONTARIO'){Chick_Sal_Clean[i,3] <- 'Ontario'}
if(Chick_Sal_Clean[i,3] == 'QUEBEC'){Chick_Sal_Clean[i,3] <- 'Quebec'}
if(Chick_Sal_Clean[i,3] == 'SASKATCHEWAN'){Chick_Sal_Clean[i,3] <- 'Saskatchewan'}
}
Chick_Sal_Clean$PROVINCE_1 <- as.factor(Chick_Sal_Clean$PROVINCE_1)
gc()
View(Chick_Sal_Clean)
nrow(Chick_Sal_Clean)
Chick_Sal_Clean <- Chick_Sal_Clean[,-4]
Chick_Sal_Clean$COMMODITY <- as.factor(Chick_Sal_Clean$COMMODITY)
Chick_Sal_Clean <- Chick_Sal_Clean[,-8]
vars <- rep(NA, 749)
for(i in 1:749){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars_to_clean <- which(vars == TRUE)
any(is.na(Chick_Sal_Clean[,6]))
which(is.na(Chick_Sal_Clean))
which(is.na(Chick_Sal_Clean$QTR))
Chick_Sal_Clean$QTR[1864]
Chick_Sal_Clean <- Chick_Sal_Clean[-which(is.na(Chick_Sal_Clean$QTR)),]
for(i in 1:749){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars <- rep(NA, 749)
for(i in 1:749){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars <- rep(NA, ncol(Chick_Sal_Clean))
for(i in 1:ncol(Chick_Sal_Clean)){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars_to_clean <- which(vars == TRUE)
Chick_Sal_Clean <- Chick_Sal_Clean[-which(is.na(Chick_Sal_Clean[,37])),]
vars <- rep(NA, ncol(Chick_Sal_Clean))
for(i in 1:ncol(Chick_Sal_Clean)){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars_to_clean <- which(vars == TRUE)
Chick_Sal_Clean <- Chick_Sal_Clean[-which(is.na(Chick_Sal_Clean[,210])),]
vars <- rep(NA, ncol(Chick_Sal_Clean))
for(i in 1:ncol(Chick_Sal_Clean)){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars_to_clean <- which(vars == TRUE)
Chick_Sal_Clean <- Chick_Sal_Clean[-which(is.na(Chick_Sal_Clean[,306])),]
vars <- rep(NA, ncol(Chick_Sal_Clean))
for(i in 1:ncol(Chick_Sal_Clean)){
vars[i] <- any(is.na(Chick_Sal_Clean[,i]))
}
vars_to_clean <- which(vars == TRUE)
set.seed(500)
ind <- sample(2,nrow(Chick_Sal), replace = TRUE, prob = c(.7,.3))
train <- Chick_Sal[ind==1,]
test<- Chick_Sal[ind==2,]
forest <- randomForest(as.factor(MIC_TET)~FINAL_ID_SEROTYPE,data = train, proximity = TRUE)
print(forest)
set.seed(500)
ind <- sample(2,nrow(Chick_Sal_Clean), replace = TRUE, prob = c(.7,.3))
train <- Chick_Sal_Clean[ind==1,]
test<- Chick_Sal_Clean[ind==2,]
forest <- randomForest(as.factor(MIC_TET)~FINAL_ID_SEROTYPE,data = train, proximity = TRUE)
print(forest)
Chick_Sal_ARA_mgKg.csv <- read.csv("C:/Users/charl/Downloads/Chick_Sal_ARA_mgKg.csv.csv", row.names=1)
View(Chick_Sal_ARA_mgKg.csv)
Chick_Sal_ARA_mgKg <- Chick_Sal_ARA_mgKg.csv[,-c(14,17,20,66,39,65,47,7,10,51)]
levels(Chick_Sal_ARA_mgKg[,20])
View(Chick_Sal_ARA_mgKg)
Chick_Sal_ARA_mgKg[,20] <- as.factor(Chick_Sal_ARA_mgKg[,20])
levels(Chick_Sal_ARA_mgKg[,20])
Chick_Sal_ARA_mgKg[,25] <- as.factor(Chick_Sal_ARA_mgKg[,25])
levels(Chick_Sal_ARA_mgKg[,25])
Chick_Sal_ARA_mgKg[,25]<-droplevels(Chick_Sal_ARA_mgKg[,25])
for(i in 1:nrow(Chick_Sal_ARA_mgKg)){
if(Chick_Sal_ARA_mgKg[i,20] == '<= 4'){Chick_Sal_ARA_mgKg[i,20] <- '<=4'}
if(Chick_Sal_ARA_mgKg[i,20] == '> 32'){Chick_Sal_ARA_mgKg[i,20] <- '>32'}
}
Chick_Sal_ARA_mgKg[,25]<-droplevels(Chick_Sal_ARA_mgKg[,25])
levels(Chick_Sal_ARA_mgKg[,25])
Chick_Sal_ARA_mgKg[,25]<-droplevels(Chick_Sal_ARA_mgKg[,25])
levels(Chick_Sal_ARA_mgKg[,25])
rf_TET_part <- train(as.formula(paste(colnames(train)[20], "~",
paste(colnames(train)[40:56], collapse = "+"),
sep = "")), data = train, method = 'ranger')
library(glmnet)
library(caret)
library(ranger)
library(tidyverse)
library(e1071)
for(i in 1:nrow(Chick_Sal_ARA_mgKg)){
if(Chick_Sal_ARA_mgKg[i,25] == '<= 4'){Chick_Sal_ARA_mgKg[i,25] <- '<=4'}
if(Chick_Sal_ARA_mgKg[i,25] == '> 32'){Chick_Sal_ARA_mgKg[i,25] <- '>32'}
}
levels(Chick_Sal_ARA_mgKg[,25])
Chick_Sal_ARA_mgKg[,25]<-droplevels(Chick_Sal_ARA_mgKg[,25])
levels(Chick_Sal_ARA_mgKg[,25])
ind <- sample(2, nrow(Chick_Sal_ARA_mgKg), replace = T,prob = c(.7,.3))
train <- Chick_Sal_ARA_mgKg[ind==1,]
test <- Chick_Sal_ARA_mgKg[ind==2,]
rf_TET_part <- train(as.formula(paste(colnames(train)[20], "~",
paste(colnames(train)[40:56], collapse = "+"),
sep = "")), data = train, method = 'ranger')
rf_TET_part <- train(as.formula(paste(colnames(train)[25], "~",
paste(colnames(train)[40:56], collapse = "+"),
sep = "")), data = train, method = 'ranger')
levels(train[,25])
for(i in 1:nrow(Chick_Sal_ARA_mgKg)){
if(Chick_Sal_ARA_mgKg[i,25] == '<=4' || Chick_Sal_ARA_mgKg[i,25] == '8'){Chick_Sal_ARA_mgKg[i,25]<- '<=8'}
if(Chick_Sal_ARA_mgKg[i,25] == '16' || Chick_Sal_ARA_mgKg[i,25] == '32'|| Chick_Sal_ARA_mgKg[i,25] == '>32'){Chick_Sal_ARA_mgKg[i,20] <- '>=16'}
}
print(rf_TET_part)
?train
varImp(rf_TET_part)
varImp(rf_TET_part, scale=F)
?train
library(glmnet)
library(caret)
library(ranger)
library(tidyverse)
library(e1071)
rf_TET_part <- train(as.formula(paste(colnames(train)[25], "~",
paste(colnames(train)[40:56], collapse = "+"),
sep = "")), data = train, method = 'ranger', importance = T)
rf_TET_part <- train(as.formula(paste(colnames(train)[25], "~",
paste(colnames(train)[46:58], collapse = "+"),
sep = "")), data = train, method = 'ranger', importance = T)
rf_TET_part <- train(as.formula(paste(colnames(train)[25], "~",
paste(colnames(train)[46:58], collapse = "+"),
sep = "")), data = train, method = 'ranger')
rf_TET_part$varImp
rf_TET_part <- train(as.formula(paste(colnames(train)[25], "~",
paste(colnames(train)[46:58], collapse = "+"),
sep = "")), data = train, method = 'ranger', importance = T)
importance(rf_TET_part)
rf_TET_part <- train(as.formula(paste(colnames(train)[25], "~",
paste(colnames(train)[46:58], collapse = "+"),
sep = "")), data = train, method = 'ranger')
